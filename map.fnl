;;
;; map.fnl
;;
;; game map representation
;;
(var tilemap [
    [0 1 2 4 5 6 7 8 9 10 11 12 13 14 15 5 5 5 5 5]
    [1 5 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 4 4 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 4 4 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 4 4 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 4 4 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 5 5 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 5 5 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 5 5 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 5 5 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 5 5 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 5 5 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 5 5 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 5 5 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 5 5 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 5 5 5 5]
    [4 4 4 4 4 4 15 15 15 15 5 5 13 13 13 13 5 5 5 5]
    [4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5]])

(fn draw [tileset]
  (each [i row (ipairs tilemap)]
    (each [j tile (ipairs row)]
      (if (~= tile 0)
          (love.graphics.draw tileset.image
                              (. tileset.quads tile)
                              (* j tileset.width)
                              (* i tileset.height))))))

{:draw draw}
